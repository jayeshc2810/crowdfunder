{"ast":null,"code":"var md5 = require('create-hash/md5');\n\nvar rmd160 = require('ripemd160');\n\nvar sha = require('sha.js');\n\nvar checkParameters = require('./precondition');\n\nvar defaultEncoding = require('./default-encoding');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar ZEROS = Buffer.alloc(128);\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n};\n\nfunction Hmac(alg, key, saltLen) {\n  var hash = getDigest(alg);\n  var blocksize = alg === 'sha512' || alg === 'sha384' ? 128 : 64;\n\n  if (key.length > blocksize) {\n    key = hash(key);\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize);\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg]);\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg]);\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36;\n    opad[i] = key[i] ^ 0x5C;\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4);\n  ipad.copy(ipad1, 0, 0, blocksize);\n  this.ipad1 = ipad1;\n  this.ipad2 = ipad;\n  this.opad = opad;\n  this.alg = alg;\n  this.blocksize = blocksize;\n  this.hash = hash;\n  this.size = sizes[alg];\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize);\n  var h = this.hash(ipad);\n  h.copy(this.opad, this.blocksize);\n  return this.hash(this.opad);\n};\n\nfunction getDigest(alg) {\n  function shaFunc(data) {\n    return sha(alg).update(data).digest();\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160;\n  if (alg === 'md5') return md5;\n  return shaFunc;\n}\n\nfunction pbkdf2(password, salt, iterations, keylen, digest) {\n  checkParameters(password, salt, iterations, keylen);\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding);\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding);\n  digest = digest || 'sha1';\n  var hmac = new Hmac(digest, password, salt.length);\n  var DK = Buffer.allocUnsafe(keylen);\n  var block1 = Buffer.allocUnsafe(salt.length + 4);\n  salt.copy(block1, 0, 0, salt.length);\n  var destPos = 0;\n  var hLen = sizes[digest];\n  var l = Math.ceil(keylen / hLen);\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length);\n    var T = hmac.run(block1, hmac.ipad1);\n    var U = T;\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2);\n\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k];\n    }\n\n    T.copy(DK, destPos);\n    destPos += hLen;\n  }\n\n  return DK;\n}\n\nmodule.exports = pbkdf2;","map":{"version":3,"sources":["/home/pratik/Downloads/crowdfunder/node_modules/pbkdf2/lib/sync-browser.js"],"names":["md5","require","rmd160","sha","checkParameters","defaultEncoding","Buffer","ZEROS","alloc","sizes","sha1","sha224","sha256","sha384","sha512","ripemd160","Hmac","alg","key","saltLen","hash","getDigest","blocksize","length","concat","ipad","allocUnsafe","opad","i","ipad1","copy","ipad2","size","prototype","run","data","h","shaFunc","update","digest","pbkdf2","password","salt","iterations","keylen","isBuffer","from","hmac","DK","block1","destPos","hLen","l","Math","ceil","writeUInt32BE","T","U","j","k","module","exports"],"mappings":"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","sourcesContent":["var md5 = require('create-hash/md5')\nvar rmd160 = require('ripemd160')\nvar sha = require('sha.js')\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar Buffer = require('safe-buffer').Buffer\nvar ZEROS = Buffer.alloc(128)\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nfunction Hmac (alg, key, saltLen) {\n  var hash = getDigest(alg)\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  if (key.length > blocksize) {\n    key = hash(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\n  ipad.copy(ipad1, 0, 0, blocksize)\n  this.ipad1 = ipad1\n  this.ipad2 = ipad\n  this.opad = opad\n  this.alg = alg\n  this.blocksize = blocksize\n  this.hash = hash\n  this.size = sizes[alg]\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize)\n  var h = this.hash(ipad)\n  h.copy(this.opad, this.blocksize)\n  return this.hash(this.opad)\n}\n\nfunction getDigest (alg) {\n  function shaFunc (data) {\n    return sha(alg).update(data).digest()\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160\n  if (alg === 'md5') return md5\n  return shaFunc\n}\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(password, salt, iterations, keylen)\n\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)\n\n  digest = digest || 'sha1'\n\n  var hmac = new Hmac(digest, password, salt.length)\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = hmac.run(block1, hmac.ipad1)\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2)\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n"]},"metadata":{},"sourceType":"script"}
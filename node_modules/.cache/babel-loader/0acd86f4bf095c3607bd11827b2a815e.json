{"ast":null,"code":"var _jsxFileName = \"/home/pratik/Downloads/crowdfunder/src/components/dashboard/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport fire from \"../../config/Firebase\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Button, Grid } from \"semantic-ui-react\";\nimport factory from \"../../ethereum/factory-contract\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      useremail: fire.auth().currentUser.email,\n      projects: [],\n      ProjectsF: []\n    };\n\n    this.onCollectionUpdate = querySnapshot => {\n      const projects = [];\n      querySnapshot.forEach(doc => {\n        const {\n          title,\n          description,\n          developername\n        } = doc.data();\n        projects.push({\n          key: doc.id,\n          doc,\n          // DocumentSnapshot\n          title,\n          description,\n          developername\n        });\n      });\n      this.setState({\n        projects\n      });\n    };\n\n    this.logout = this.logout.bind(this);\n    this.ref = fire.firestore().collection(\"projects\");\n    this.unsubscribe = null;\n    this.state = {\n      useremail: fire.auth().currentUser.email,\n      projects: [],\n      ProjectsF: []\n    };\n  }\n\n  async componentDidMount() {\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n    const ProjectsF = await factory.methods.getDeployedCampaigns().call();\n    this.setState({\n      ProjectsF\n    });\n  }\n\n  renderCards() {\n    if (this.state.ProjectsF.length === 0) {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    const items = this.state.ProjectsF.map((campaignAddress, index) => /*#__PURE__*/React.createElement(Card, {\n      key: index,\n      fluid: true,\n      header: campaignAddress,\n      description: /*#__PURE__*/React.createElement(Link, {\n        to: `/campaigns/${campaignAddress}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, \"Show Details\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }));\n    return /*#__PURE__*/React.createElement(Card.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }\n    }, items);\n  }\n\n  RenderCards() {\n    if (this.state.projects.length === 0) {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    const items = this.state.projects.map(project => /*#__PURE__*/React.createElement(Card, {\n      fluid: true,\n      header: project.title,\n      extra: \"Description: \" + project.description + \" \" + \"Developer:\" + project.developername,\n      description: /*#__PURE__*/React.createElement(Link, {\n        to: `/campaigns/${project.key}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, \" Show Details\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }));\n    return /*#__PURE__*/React.createElement(Card.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }\n    }, items);\n  }\n\n  logout() {\n    fire.auth().signOut();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, \"User Email: \", this.state.useremail), /*#__PURE__*/React.createElement(Button, {\n      floated: true,\n      onClick: this.logout,\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, \"Logout\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, \"Projects List\"), this.RenderCards(), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/pratik/Downloads/crowdfunder/src/components/dashboard/Dashboard.js"],"names":["React","Component","fire","Link","Card","Button","Grid","factory","Dashboard","constructor","props","state","useremail","auth","currentUser","email","projects","ProjectsF","onCollectionUpdate","querySnapshot","forEach","doc","title","description","developername","data","push","key","id","setState","logout","bind","ref","firestore","collection","unsubscribe","componentDidMount","onSnapshot","methods","getDeployedCampaigns","call","renderCards","length","items","map","campaignAddress","index","RenderCards","project","signOut","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport fire from \"../../config/Firebase\";\nimport { Link } from \"react-router-dom\";\n\nimport { Card, Button, Grid } from \"semantic-ui-react\";\nimport factory from \"../../ethereum/factory-contract\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.logout = this.logout.bind(this);\n\n    this.ref = fire.firestore().collection(\"projects\");\n    this.unsubscribe = null;\n    this.state = {\n      useremail: fire.auth().currentUser.email,\n      projects: [],\n      ProjectsF: [],\n    };\n  }\n\n  state = {\n    useremail: fire.auth().currentUser.email,\n    projects: [],\n    ProjectsF: [],\n  };\n\n  async componentDidMount() {\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n    const ProjectsF = await factory.methods.getDeployedCampaigns().call();\n    this.setState({ ProjectsF });\n  }\n\n  renderCards() {\n    if (this.state.ProjectsF.length === 0) {\n      return <h3>Loading...</h3>;\n    }\n\n    const items = this.state.ProjectsF.map((campaignAddress, index) => (\n      <Card\n        key={index}\n        fluid\n        header={campaignAddress}\n        description={\n          <Link to={`/campaigns/${campaignAddress}`}>Show Details</Link>\n        }\n      />\n    ));\n    return <Card.Group>{items}</Card.Group>;\n  }\n\n  RenderCards() {\n    if (this.state.projects.length === 0) {\n      return <h3>Loading...</h3>;\n    }\n\n    const items = this.state.projects.map((project) => (\n      <Card\n        fluid\n        header={project.title}\n        extra={\n          \"Description: \" +\n          project.description +\n          \" \" +\n          \"Developer:\" +\n          project.developername\n        }\n        description={\n          <Link to={`/campaigns/${project.key}`}> Show Details</Link>\n        }\n      />\n    ));\n    return <Card.Group>{items}</Card.Group>;\n  }\n\n  logout() {\n    fire.auth().signOut();\n  }\n\n  onCollectionUpdate = (querySnapshot) => {\n    const projects = [];\n    querySnapshot.forEach((doc) => {\n      const { title, description, developername } = doc.data();\n      projects.push({\n        key: doc.id,\n        doc, // DocumentSnapshot\n        title,\n        description,\n        developername,\n      });\n    });\n    this.setState({\n      projects,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"dashboard container\">\n        <br />\n        <h3>User Email: {this.state.useremail}</h3>\n        <Button floated onClick={this.logout} primary>\n          Logout\n        </Button>\n        <br />\n        <br />\n        <h3>Projects List</h3>\n        {this.RenderCards()}\n        {/* <Grid>\n          <Grid.Row>\n            <Grid.Column width={12}>{this.RenderCards()}</Grid.Column>\n            <Grid.Column width={4}>\n              <Link to={`/create`}>\n                <Button floated=\"right\" primary>\n                  Post Project\n                </Button>\n              </Link>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid> */}\n\n        <br />\n\n        {/* <h3>Projects List</h3>\n        {this.renderCards()} */}\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}